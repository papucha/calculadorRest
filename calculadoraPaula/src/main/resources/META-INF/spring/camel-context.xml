<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:cxf="http://camel.apache.org/schema/cxf"

	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd       
      http://camel.apache.org/schema/spring
      http://camel.apache.org/schema/spring/camel-spring.xsd
      http://camel.apache.org/schema/cxf 
      http://camel.apache.org/schema/cxf/camel-cxf.xsd 
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
      http://www.springframework.org/schema/osgi-compendium
      http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd">

	<import resource="properties-beans.xml" />

	<!-- Buscar el Datasource by jndi -->
	<!-- <bean id="dsCalculadora"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="com.microsoft.sqlserver.jdbc" />
		<property name="url"
			value="jdbc:sqlserver://localhost:1433;DatabaseName=calculadoraESB;Trusted_Connection=True;" />
		<property name="username" value="prueba" />
		<property name="password" value="123" />
	</bean>-->

	<jee:jndi-lookup expected-type="javax.sql.DataSource"
		id="dsCalculadora" jndi-name="osgi:service/jdbc/calculadoraPaula"
		resource-ref="true" />

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dsCalculadora" />

	</bean>
	<!-- SQL component -->
	<bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
		<property name="dataSource" ref="dsCalculadora" />
	</bean>

	<!-- Enabled Spring Annotations -->
	<ctx:annotation-config />
	<ctx:component-scan
		base-package="com.calculadora.paula.*" />
	<bean class="org.slf4j.LoggerFactory" factory-method="getLogger"
		id="loggerRef">
		<constructor-arg index="0" value="calculadoraPaula" />
	</bean>
	<!-- call static method -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		id="test">
		<property name="targetClass" value="org.slf4j.MDC" />
		<property name="targetMethod" value="put" />
		<property name="arguments">
			<list>
				<value>calculadoraPaula</value>
				<value>calculadoraPaula</value>
			</list>
		</property>
	</bean>
	<bean class="com.calculadora.paula.rest.processor.paulaClase"
		id="paulaClase1" />
	<cxf:rsServer address="{{rest.server.url.path}}"
		id="restServer"
		serviceClass="com.calculadora.paula.rest.service.RestService"
		staticSubresourceResolution="true">
		<cxf:providers>
			<bean
				class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" />
		</cxf:providers>
	</cxf:rsServer>
	<bean class="org.apache.camel.component.metrics.MetricsComponent"
		id="metric">
		<description>Camel Metrics Component</description>
	</bean>
	<!-- Use camel-metrics route policy to gather metrics for all routes -->
	<bean
		class="org.apache.camel.component.metrics.routepolicy.MetricsRoutePolicyFactory"
		id="metricsRoutePolicyFactory">
		<property name="useJmx" value="true" />
	</bean>

	<camelContext id="ctx-calculadoraPaula"
		messageHistory="true" trace="false"
		typeConverterStatisticsEnabled="true" useMDCLogging="true"
		xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="propertiesRef"
			location="ref:props, ref:mail-props" />
		<endpoint id="rsServerEndpoint"
			uri="cxfrs://bean://restServer">
			<property key="bindingStyle" value="SimpleConsumer" />
			<property key="loggingFeatureEnabled"
				value="{{rest.server.loggingFeatureEnabled}}" />
		</endpoint>
		<endpoint id="sedaCorreoSoporteEndpoint"
			uri="seda:mailErrorNotification" />
		<onException id="CustomExceptionHandling">
			<description />
			<exception>java.lang.Exception</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<log id="logBodyRequest" loggerRef="loggerRef"
				loggingLevel="ERROR"
				message="Exception: ${exception.message}, StackTrace:  ${exception.stacktrace}" />
			<bean ref="responseHandler">
				<description>Create Respone Bean</description>
			</bean>
			<to pattern="InOnly" uri="ref:sedaCorreoSoporteEndpoint" />
		</onException>
		<route id="restServerRoute" streamCache="true">
			<from id="restFrom" uri="ref:rsServerEndpoint" />
			<log id="_data2" message="Operador: ${body.operador}" />
			<to id="_to1" uri="direct:Route-Resultado" />
		</route>
		<route id="ROUTE-RESULTADO" streamCache="true">
			<from id="_from253453453453" uri="direct:Route-Resultado" />
			<log id="_logMesagge" loggerRef="loggerRef" loggingLevel="INFO"
				message="Inicia Servicio ROUTE-RESULTADO" />
			<log id="_data1" message="Numero1: ${body.num1}" />
			<log id="_data5" message="Numero2: ${body.num2}" />
			<setProperty id="_property19853" propertyName="Numero1">
				<simple>${body.num1}</simple>
			</setProperty>
			<setProperty id="_property29314545"
				propertyName="Numero2">
				<simple>${body.num2}</simple>
			</setProperty>
			<setProperty id="_property3" propertyName="Operador">
				<simple>${body.operador}</simple>
			</setProperty>
			<process id="_process03132323232" ref="paulaClase1" />
			<setBody id="_setBody01">
				<simple>${body}</simple>
			</setBody>
			<log id="_data6" message="Resultado operación : ${body}" />
			<to uri="direct:insert" />
		</route>
		<route id="ROUTE-INSERTBD" streamCache="true">
			<from id="_from6" uri="direct:insert" />
			<log id="_logMesagge2" loggerRef="loggerRef" loggingLevel="INFO"
				message="Inicia Servicio Insert en BD" />
			<log id="_data63" message="Recuperando header 1" />
			<setHeader headerName="recuperaNum1">
				<simple>${property.Numero1}</simple>
			</setHeader>
			<log id="_data99" message="Recuperando header 2" />
			<setHeader headerName="recuperaNum2">
				<simple>${property.Numero2}</simple>
			</setHeader>
			<setHeader headerName="recuperaOperador">
				<simple resultType="java.lang.String">${property.Operador}</simple>
			</setHeader>
			<log id="_data00" message="Recuperando header body" />
			<setHeader headerName="recuperaBody">
				<simple resultType="java.lang.Float">${body}</simple>
			</setHeader>
			<log id="_data63"
				message="Recuperando header operador: ${header.recuperaOperador}" />
			<log id="_data33" message="Lammando sentencia sql" />
			<to uri="sql:{{sql.insert}}" />
		</route>
		<route customId="true" id="ROUTE-MAIL-NOTIFICATION"
			streamCache="true">
			<description>Se redirecciona el mensaje al JMS de envío de Emails</description>
			<from id="_from1535345345" uri="ref:sedaCorreoSoporteEndpoint" />
			<doTry id="_doTry1">
				<log id="_log124242424" loggerRef="loggerRef"
					loggingLevel="INFO"
					message="Notificando el Error: ${property.errorMessage}" />
				<setHeader headerName="DescripcionError" id="_setHeader1">
					<simple>${headers.errorMessage}</simple>
				</setHeader>
				<setHeader headerName="NombreServicio" id="NombreServicio">
					<simple>{{application.service.name}}</simple>
				</setHeader>
				<setHeader headerName="TipoServicio" id="TipoServicio">
					<simple>{{application.service.type}}</simple>
				</setHeader>
				<setProperty id="_setProperty154353543"
					propertyName="mailTo">
					<simple>{{email.to}}</simple>
				</setProperty>
				<setProperty id="_setProperty79769769"
					propertyName="mailFrom">
					<simple>{{email.from}}</simple>
				</setProperty>
				<setProperty id="_setProperty575745757"
					propertyName="mailSubject">
					<simple>{{email.subject}}</simple>
				</setProperty>
				<setProperty id="_setPropert243434"
					propertyName="mailTemplate">
					<constant>PlantillaCorreo</constant>
				</setProperty>
				<process id="_process65654"
					ref="prepareMailingNotificationProcessor">
					<description>Create request to send to notification queue</description>
				</process>
				<log id="_log2" loggerRef="loggerRef" loggingLevel="INFO"
					message="Enviando mensaje a la JMS de Notificaciones: ${body}" />
				<doCatch id="_doCatch1">
					<exception>java.lang.Exception</exception>
					<handled>
						<constant>true</constant>
					</handled>
					<log id="_log3" loggerRef="loggerRef" loggingLevel="ERROR"
						message="Error enviando mensaje al QUEUE: {{email.notification.queue.name}}, MessageError: ${exception.message}" />
				</doCatch>
			</doTry>
		</route>
	</camelContext>
	<!-- ActiveMQ Configuration -->
	<bean class="org.apache.activemq.ActiveMQConnectionFactory"
		depends-on="amq-props" id="jmsConnectionFactory">
		<property name="brokerURL" value="${AMQ.brokerURL}" />
		<property name="userName" value="${AMQ.userName}" />
		<property name="password" value="${AMQ.password}" />
	</bean>
	<bean class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop" id="pooledConnectionFactory" init-method="start">
		<property name="maxConnections" value="10" />
		<property name="maximumActiveSessionPerConnection"
			value="100" />
		<property name="blockIfSessionPoolIsFull" value="false" />
		<property name="blockIfSessionPoolIsFullTimeout"
			value="10000" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	<bean class="org.apache.camel.component.jms.JmsConfiguration"
		id="jmsConfiguration">
		<property name="connectionFactory"
			ref="pooledConnectionFactory" />
	</bean>
	<bean
		class="org.apache.activemq.camel.component.ActiveMQComponent"
		id="activemq">
		<property name="Configuration" ref="jmsConfiguration" />
	</bean>
	<!-- End ActiveMQ Configuration -->
</beans>
